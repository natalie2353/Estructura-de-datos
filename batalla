import string

TAM_TABLERO = 10
LETRAS = string.ascii_uppercase[:TAM_TABLERO]
AGUA, BARCO, IMPACTO, FALLO = "~", "P", "X", "*"
NUM_PORTAAVIONES = 5
TAM_PORTAAVIONES = 5

def crear_tablero():
    return [[AGUA for _ in range(TAM_TABLERO)] for _ in range(TAM_TABLERO)]

def mostrar_tablero(tablero, ocultar_barcos=True):
    encabezado = "   " + " ".join(f"{i:>2}" for i in range(1, TAM_TABLERO+1))
    print(encabezado)
    for r in range(TAM_TABLERO):
        fila = ""
        for c in range(TAM_TABLERO):
            celda = tablero[r][c]
            if ocultar_barcos and celda == BARCO:
                fila += AGUA + " "
            else:
                fila += celda + " "
        print(f"{LETRAS[r]}  {fila}")
    print()

def leer_coordenada(texto):
    texto = texto.strip().upper().replace(" ", "")
    if len(texto) < 2: return None
    letra, numero = texto[0], texto[1:]
    if letra not in LETRAS or not numero.isdigit(): return None
    fila, col = LETRAS.index(letra), int(numero)-1
    if 0 <= fila < TAM_TABLERO and 0 <= col < TAM_TABLERO: return (fila, col)
    return None

def puede_colocar(tablero, f, c, tam, orientacion):
    if orientacion == "H":
        if c + tam > TAM_TABLERO: return False
        return all(tablero[f][cc] == AGUA for cc in range(c, c+tam))
    else:
        if f + tam > TAM_TABLERO: return False
        return all(tablero[ff][c] == AGUA for ff in range(f, f+tam))

def colocar_barco(tablero, f, c, tam, orientacion):
    coords = []
    if orientacion == "H":
        for cc in range(c, c+tam):
            tablero[f][cc] = BARCO
            coords.append((f, cc))
    else:
        for ff in range(f, f+tam):
            tablero[ff][c] = BARCO
            coords.append((ff, c))
    return coords

def quitar_barco(tablero, coords):
    for f, c in coords:
        tablero[f][c] = AGUA

def todos_hundidos(tablero):
    return all(celda != BARCO for fila in tablero for celda in fila)

def disparar(tablero, f, c):
    if tablero[f][c] == BARCO:
        tablero[f][c] = IMPACTO
        return "¡Impacto!"
    elif tablero[f][c] == AGUA:
        tablero[f][c] = FALLO
        return "Agua."
    elif tablero[f][c] in (IMPACTO, FALLO):
        return "Ya disparaste ahí."
    return "Error."

def colocar_todos_barcos(nombre):
    tablero = crear_tablero()
    posiciones = []
    print(f"\n=== {nombre}, coloca tus {NUM_PORTAAVIONES} Portaaviones ===")
    mostrar_tablero(tablero, ocultar_barcos=False)
    for i in range(NUM_PORTAAVIONES):
        colocado = False
        while not colocado:
            pos = input(f"Portaaviones {i+1} posición inicial (ejemplo A1): ")
            coord = leer_coordenada(pos)
            if coord is None:
                print("Coordenada inválida.")
                continue
            f, c = coord
            orient = input("Orientación (H/V): ").strip().upper()
            if orient not in ("H", "V"):
                print("Orientación inválida.")
                continue
            if not puede_colocar(tablero, f, c, TAM_PORTAAVIONES, orient):
                print("No se puede colocar ahí.")
                continue
            coords = colocar_barco(tablero, f, c, TAM_PORTAAVIONES, orient)
            posiciones.append(coords)
            mostrar_tablero(tablero, ocultar_barcos=False)
            colocado = True
    while True:
        mover = input("¿Quieres mover un Portaaviones? (sí/no): ").strip().lower()
        if mover != "sí": break
        print("Portaaviones disponibles para mover:")
        for idx, coords in enumerate(posiciones, 1):
            inicio = coords[0]
            print(f"{idx}. {LETRAS[inicio[0]]}{inicio[1]+1}")
        eleccion = input("Elige un número de Portaaviones: ")
        if not eleccion.isdigit() or int(eleccion) not in range(1, NUM_PORTAAVIONES+1):
            print("Opción inválida.")
            continue
        idx = int(eleccion)-1
        quitar_barco(tablero, posiciones[idx])
        colocado = False
        while not colocado:
            pos = input(f"Nueva posición para Portaaviones {eleccion} (ejemplo B2): ")
            coord = leer_coordenada(pos)
            if coord is None:
                print("Coordenada inválida.")
                continue
            f, c = coord
            orient = input("Orientación (H/V): ").strip().upper()
            if orient not in ("H", "V"):
                print("Orientación inválida.")
                continue
            if not puede_colocar(tablero, f, c, TAM_PORTAAVIONES, orient):
                print("No se puede colocar ahí.")
                continue
            posiciones[idx] = colocar_barco(tablero, f, c, TAM_PORTAAVIONES, orient)
            mostrar_tablero(tablero, ocultar_barcos=False)
            colocado = True
    return tablero

if __name__ == "__main__":
    tablero1 = colocar_todos_barcos("Jugador 1")
    input("Presiona ENTER y pasa al Jugador 2...")
    tablero2 = colocar_todos_barcos("Jugador 2")
    turno = 1
    while True:
        if turno == 1:
            print("\n=== Turno de Jugador 1 ===")
            mostrar_tablero(tablero2, ocultar_barcos=True)
            pos = input("Disparo (ejemplo B4): ")
            coord = leer_coordenada(pos)
            if coord is None: 
                print("Coordenada inválida.")
                continue
            f, c = coord
            print(disparar(tablero2, f, c))
            if todos_hundidos(tablero2):
                print("¡Jugador 1 gana! Hundió todos los Portaaviones.")
                break
            turno = 2
        else:
            print("\n=== Turno de Jugador 2 ===")
            mostrar_tablero(tablero1, ocultar_barcos=True)
            pos = input("Disparo (ejemplo C7): ")
            coord = leer_coordenada(pos)
            if coord is None: 
                print("Coordenada inválida.")
                continue
            f, c = coord
            print(disparar(tablero1, f, c))
            if todos_hundidos(tablero1):
                print("¡Jugador 2 gana! Hundió todos los Portaaviones.")
                break
            turno = 1